//Author: bill125

#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <map>
#include <set>
#include <vector>
#include <algorithm>
#include <climits>
#include <cstdlib>
#include <ctime>
#include <queue>
#include <bitset>

using namespace std;

typedef long long ll;
typedef double db;
typedef pair<int,int> Pair;
#define rep(i,n) for (int i=0; i<n; ++i)
#define repD(i,n) for (int i=n-1; i>=0; --i)
#define For(i,a,b) for (int i=a; i<=b; ++i)
#define ForD(i,a,b) for (int i=a; i>=b; --i)
#define ForE(i,a) for (Edge* i=h[a]; i; i=i->next)
#define forv(i,a) for (unsigned int i=0, ___t=a.size(); i<___t; ++i)
#define ForV(i,a) for (__typeof(a.begin()) i = a.begin();i != a.end();++i)
#define fill(a,b) memset(a,b,sizeof(a))
#define lowbit(a) ((a) & (-(a)))
#define sqr(a) ((a)*(a))
#define max(a,b) (((a)>(b))?(a):(b))
#define min(a,b) (((a)>(b))?(b):(a))
#define pb push_back
#define mp make_pair
#define v1 first
#define v2 second
#define gi gI()
#define cut puts("===================")

void setIO(string NAME) {
	string in = NAME + ".in";
	string out = NAME + ".out";
	freopen(in.c_str(),"r",stdin);
	freopen(out.c_str(),"w",stdout);
}
ll gI() {
	char c=getchar();
	while ((c<'0' || c>'9')&&c!='-') c=getchar();
	ll flag=1,p=0;
	if (c=='-') flag=-1,c=getchar();
	while (c>='0' && c<='9') p=p*10+(c-'0'),c=getchar();
	return p*flag;
}
int gs(char *C) {
	char c=getchar();
	while (c==' ' || c=='\n') c=getchar();
	int l=0;
	while (c!=' ' && c!='\n') C[l++]=c,c=getchar();
	C[l]=0;
	return l;
}

template <class T> void debug (const T a,const int & n) {rep(i,n) printf("%d%c", a[i], (i==n-1) ? '\n' : ' ');}
template <typename T> void mine(T &a, const T &b) {if (b<a) a=b;}
template <typename T> void maxe(T &a, const T &b) {if (b>a) a=b;}

const int inf=~0U>>1,maxn=20+10,maxm=maxn,maxM=(1<<20)+10;
int n,m;
struct Bonus {
	int k,p,a;
	bool operator< (const Bonus&b) const {
		return p<b.p;
	}
}b[maxm];
int dp[maxM], s[maxM], cnt[maxM];
int w[maxn][maxn];
bool v[maxM];

int main() {
	setIO("dec");
	
	n=gi, m=gi;
	rep(i,m) b[i].k=gi, b[i].p=gi, b[i].a=gi;
	rep(i,n) rep(j,n) 
		w[i][j]=gi;
	sort(b,b+m);
	
	fill(v,0);
	int r=1;
	s[0]=0, v[0]=1, cnt[0]=0;
	rep(i,(1<<n)) {
		int M=s[i];
		rep(j,n) if (!(M&(1<<j)) && !v[M|(1<<j)]) {
			s[r++]=M|(1<<j);
			v[M|(1<<j)]=1;
			cnt[M|(1<<j)]=cnt[M]+1;
		}
	}
	
	dp[0]=0;
	For(i,1,(1<<n)-1) {
		int M=s[i];
		rep(j,n) if ((1<<j)&M) {
			maxe(dp[M],dp[M^(1<<j)]+w[j][cnt[M]-1]);
		}
		rep(j,m) if (b[j].k==cnt[M] && b[j].p<=dp[M])
			dp[M]+=b[j].a;
	}
	
	printf("%d\n", dp[(1<<n)-1]);
	
	
	return 0;
}
